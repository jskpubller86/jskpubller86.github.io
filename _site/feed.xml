<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.0.0">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-04-08T22:22:52+09:00</updated><id>http://localhost:4000/feed.xml</id><entry><title type="html">Github Blog2</title><link href="http://localhost:4000/2020/04/08/github-blog2.html" rel="alternate" type="text/html" title="Github Blog2" /><published>2020-04-08T00:00:00+09:00</published><updated>2020-04-08T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/08/github-blog2</id><content type="html" xml:base="http://localhost:4000/2020/04/08/github-blog2.html">&lt;h1 id=&quot;github-블로그-만들기2&quot;&gt;Github 블로그 만들기2&lt;/h1&gt;

&lt;h2 id=&quot;1-jekyll-구성요소&quot;&gt;1. jekyll 구성요소&lt;/h2&gt;
&lt;p&gt;jekyll 다음과 같은 디렉터리 구조를 갖는다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;.
├── _config.yml
├── _data
│   └── members.yml
├── _drafts
│   ├── begin-with-the-crazy-ideas.md
│   └── on-simplicity-in-technology.md
├── _includes
│   ├── footer.html
│   └── header.html
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   ├── 2007-10-29-why-every-programmer-should-play-nethack.md
│   └── 2009-04-26-barcamp-boston-4-roundup.md
├── _sass
│   ├── _base.scss
│   └── _layout.scss
├── _site
├── .jekyll-metadata
└── index.html # can also be an 'index.md' with valid front matter
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name></name></author><summary type="html"></summary></entry><entry><title type="html">Github Blog</title><link href="http://localhost:4000/2020/04/08/github-blog.html" rel="alternate" type="text/html" title="Github Blog" /><published>2020-04-08T00:00:00+09:00</published><updated>2020-04-08T00:00:00+09:00</updated><id>http://localhost:4000/2020/04/08/github-blog</id><content type="html" xml:base="http://localhost:4000/2020/04/08/github-blog.html">&lt;h1 id=&quot;github-블로그-만들기&quot;&gt;Github 블로그 만들기&lt;/h1&gt;

&lt;p&gt;Github에서는 회원에게 웹호스팅과 도메인을 각각 한 개씩 제공한다. 
이를 이용하기 위해서는 먼저 저장소를 만들어야 하는데 웹호스팅을 할 수 있는 저장소의 이름은 회원아이디를 이용하여 생성해야 한다.&lt;/p&gt;

&lt;p&gt;만약 회원아이디가 korea 라면  korea.github.io  로 생성해야한다.&lt;/p&gt;

&lt;p&gt;korea.github.io 로 저장소가 생성이 되면 웹호스팅에 배포되고 도메인 주소 https://korea.github.io/ 로 접근할 수 있게 된다.&lt;/p&gt;

&lt;h2 id=&quot;1-jekyll-framwork--이용하기&quot;&gt;1. jekyll framwork  이용하기&lt;/h2&gt;

&lt;p&gt;일반적으로 html을 이용하여 블로그를 작성할 수 있지만 그렇게하면 글을 꾸미기 위해서 많은 태그들을 사용하게 된다.&lt;/p&gt;

&lt;p&gt;태그를 사용하는 일은 반복적이고 귀찮은 일이다.&lt;/p&gt;

&lt;p&gt;위의 대안으로 markdown을 이용하여 좀더 쉽게 글을 꾸밀 수 있지만 markdown이 지원하는 태그는 몇가지가 안되기 때문에 html을 사용할 수 밖에 없다.&lt;/p&gt;

&lt;p&gt;그래서 이 둘을 간편하게 작성할 수 있도록 도와주는 프레임워크가 나왔는데 바로 jekyll 이라는 프레임워크이다.&lt;/p&gt;

&lt;p&gt;참고로 나는 jekyll을 제길로 읽는다.&lt;/p&gt;

&lt;p&gt;jekyll 은 마크다운과 html을 모두 지원하며 오직 파일로만 블로그 글을 쉽게 작성할 수 있도록 지원해준다.&lt;/p&gt;

&lt;p&gt;jekyll의 사이트 주소는 아래와 같다.&lt;/p&gt;

&lt;p&gt;https://jekyll.com/&lt;/p&gt;

&lt;p&gt;사이트에 가면 사용법에 대하여 문서화가 되어있다.&lt;/p&gt;

&lt;p&gt;영어를 잘하면 매번 들어가서 확인하면 되지만 난 그러지 못하기 때문에 어려움을 덜고자 정리글을 쓴다.&lt;/p&gt;

&lt;h3 id=&quot;11-설치하기&quot;&gt;1.1. 설치하기&lt;/h3&gt;

&lt;p&gt;jekyll을 사용하기 위해서는 먼저 Ruby 개발환경이 구축되어 있어야 한다.&lt;/p&gt;

&lt;p&gt;Ruby개발환경을 구축하는 방법에 대해서는 따로 글을 작성하겠다.&lt;/p&gt;

&lt;p&gt;그럼 Ruby 개발환경이 구축되어 있다고 가정하고 jekyll과 bundler를 설치해야 한다.
터미널을 열고 다음 명령어를 입력한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem install jekyll bundler
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jekyll에는 구축에 필요한 의존파일들이 있다. 이러한 의존파일들을 설정하기 위해서는 Gemfile을 만들어야 하는데 다음의 명령어로 생성할 수 있다. 
참고로 Gemfile은 사이트의 루트 폴더에 위치해야 한다.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gem &quot;jekyll&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Gemfile 까지 다 만들었다면 준비는 끝났다.&lt;/p&gt;

&lt;h3 id=&quot;12-사이트-생성&quot;&gt;1.2. 사이트 생성&lt;/h3&gt;

&lt;p&gt;간단하게 index.html 파일을 생성한다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!doctype html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;charset=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;utf-8&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Home&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello World!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h3 id=&quot;13-빌드&quot;&gt;1.3. 빌드&lt;/h3&gt;

&lt;p&gt;jekll은 빌드를 통해 정적 사이트를 만들어준다.&lt;/p&gt;

&lt;p&gt;빌드를 하기위해서는 다음 두 명령어를 사용한다 .&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;jekyll build - 해당 명령어로 빌드를 하게 되면 _site 라는 폴더에 정적파일들을 생성한다.&lt;/li&gt;
  &lt;li&gt;jekyll serve - http://localhost:4000 에 배포하며 파일에 변경사항이 있을 http://localhost:4000 에 반영한다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;현재  index.html 을 위와 같이 생성한 상태에서 터미널을 열고 빌드와 배포를 하면 
 http://localhost:4000 주소에서 “Hello World!” 를 확인 할 수 있다.&lt;/p&gt;</content><author><name></name></author><summary type="html"></summary></entry></feed>